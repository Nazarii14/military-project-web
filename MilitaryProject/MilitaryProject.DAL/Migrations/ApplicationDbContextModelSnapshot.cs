// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilitaryProject.DAL;

#nullable disable

namespace MilitaryProject.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Ammunition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Ammunitions", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Brigade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CommanderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Brigades", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.BrigadeStorage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<int>("AmmunitionQuantity")
                        .HasColumnType("int");

                    b.Property<int>("AmmunitionRemainder")
                        .HasColumnType("int");

                    b.Property<int>("BrigadeID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponQuantity")
                        .HasColumnType("int");

                    b.Property<int>("WeaponRemainder")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AmmunitionID");

                    b.HasIndex("BrigadeID");

                    b.HasIndex("WeaponID");

                    b.ToTable("BrigadeStorages", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.MilitaryRoute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<int>("AmmunitionQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VolunteerID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponQuantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AmmunitionID");

                    b.HasIndex("VolunteerID");

                    b.HasIndex("WeaponID");

                    b.ToTable("MilitaryRoutes", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Request", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<int>("AmmunitionQuantity")
                        .HasColumnType("int");

                    b.Property<int>("BrigadeID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponQuantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AmmunitionID");

                    b.HasIndex("BrigadeID");

                    b.HasIndex("WeaponID");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BrigadeID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BrigadeID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.UserItems", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AmmunitionID");

                    b.HasIndex("UserID");

                    b.HasIndex("WeaponID");

                    b.ToTable("UserItems", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Weapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ID");

                    b.ToTable("Weapons", (string)null);
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.BrigadeStorage", b =>
                {
                    b.HasOne("MilitaryProject.Domain.Entity.Ammunition", "Ammunition")
                        .WithMany("BrigadeStorages")
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.Brigade", "Brigade")
                        .WithMany("BrigadeStorages")
                        .HasForeignKey("BrigadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.Weapon", "Weapon")
                        .WithMany("BrigadeStorages")
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ammunition");

                    b.Navigation("Brigade");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.MilitaryRoute", b =>
                {
                    b.HasOne("MilitaryProject.Domain.Entity.Ammunition", "Ammunition")
                        .WithMany("MilitaryRoutes")
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.User", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.Weapon", "Weapon")
                        .WithMany("MilitaryRoutes")
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ammunition");

                    b.Navigation("Volunteer");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Request", b =>
                {
                    b.HasOne("MilitaryProject.Domain.Entity.Ammunition", "Ammunition")
                        .WithMany()
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.Brigade", "Brigade")
                        .WithMany("Requests")
                        .HasForeignKey("BrigadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ammunition");

                    b.Navigation("Brigade");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.User", b =>
                {
                    b.HasOne("MilitaryProject.Domain.Entity.Brigade", "Brigade")
                        .WithMany("Users")
                        .HasForeignKey("BrigadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigade");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.UserItems", b =>
                {
                    b.HasOne("MilitaryProject.Domain.Entity.Ammunition", "Ammunition")
                        .WithMany("UserItems")
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.User", "User")
                        .WithMany("UserItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilitaryProject.Domain.Entity.Weapon", "Weapon")
                        .WithMany("UserItems")
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ammunition");

                    b.Navigation("User");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Ammunition", b =>
                {
                    b.Navigation("BrigadeStorages");

                    b.Navigation("MilitaryRoutes");

                    b.Navigation("UserItems");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Brigade", b =>
                {
                    b.Navigation("BrigadeStorages");

                    b.Navigation("Requests");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.User", b =>
                {
                    b.Navigation("UserItems");
                });

            modelBuilder.Entity("MilitaryProject.Domain.Entity.Weapon", b =>
                {
                    b.Navigation("BrigadeStorages");

                    b.Navigation("MilitaryRoutes");

                    b.Navigation("UserItems");
                });
#pragma warning restore 612, 618
        }
    }
}
